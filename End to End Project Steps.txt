1) Create a empty folder in local system and a repository in github and in local system navigate to it use anaconda prompt from anaconda promte open vscode.
2) Then in vscode create a virtual environment using conda create ip venv python==version -y.
3) Activate venv using conda activate venv.
4) Create a README.md file in local system.
5) Then initialize the the project in the local system, steps written in github.
6) If permission denied error create a ssh key in local system and add it to github by going to setting-> ssh key -> add key.
7) create a gitignore file in github and choose python template and commit changes.
8) Create setup.py and requirements.txt
  a) setup.py is used to convert project into package which can then be published and installed on any device.
9) Then create a src folder which contains an __init__.py
  a) The src directory is often used in software projects to organize source code. Placing your code in a src directory can help clarify the structure of your project,            making it easier to understand and navigate.
  b) The __init__.py file is used to mark a directory as a Python package. When a directory contains an __init__.py file, it tells Python that the directory should be             treated as a package, allowing you to import modules from that directory.
  c) The -e . syntax in a requirements.txt file is used to install a package in "editable" mode. This is typically used during development to allow for changes to the source      code to be immediately reflected without needing to reinstall the package.
     Explanation
     -e: This stands for "editable" mode. When you install a package in editable mode, any changes you make to the source code will be directly reflected in the package            without needing to reinstall it.
      .: This refers to the current directory, which is usually the root of your project. By using -e ., you are indicating that the package you want to install is located         in the current directory.
